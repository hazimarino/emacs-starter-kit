#+TITLE: Iyori's Customize File 
#+OPTIONS: toc:nil num:nil ^:nil

* Custmize Top
  require 

** 基本設定

*** Fonts
**** フォントの設定
    * 英数部分に「Liberation Mono」
    * 日本語部分に「Takao ゴシック」
    * サイズは11となっている
#+begin_src emacs-lisp
  ;; Use Fonts
  (when window-system
    (progn
      (set-default-font "Liberation Mono-11")
      ;(set-frame-font "Courier 10 Pitch-12")
      (set-fontset-font (frame-parameter nil 'font)
                        'japanese-jisx0208
                        '("TakaoGothic" . "unicode-bmp"))))
#+end_src

*** Color Theme
**** 半透明化とサイズと色指定
http://d.hatena.ne.jp/goryugo/20081017/1224174326

#+begin_src emacs-lisp
  (setq default-frame-alist
        (setq initial-frame-alist
              (append (list
                       '(foreground-color . "azure3")
                       '(background-color . "black")
                       '(mouse-color . "white")
                       '(alpha . (85 80 60 60))
                       '(width . 100)
                       ;;'(height . 47)
                       ;;'(width . 60)
                       '(height . 40)
                       ) initial-frame-alist)))
#+end_src

**** カラーテーマを選択
    [[file:starter-kit-miac.org][ starter-kit-misc]] に設定が書いてある。
#+begin_src emacs-lisp
  ; Color Theme
  (color-theme-dark-laptop)
#+end_src

*** Misc
**** ｘのクリップボードを使う設定
#+begin_src emacs-lisp
; make emacs use the clipboard
  (setq x-select-enable-clipboard t)
#+end_src

**** スクロールバーを表示しない
#+begin_src emacs-lisp
(if (fboundp 'scroll-bar-mode) (scroll-bar-mode -1))
#+end_src


** vendor lisps

*** setting  ibus-mozc of ibus.el

site
http://d.hatena.ne.jp/iRiE/20100529/1275162812
■ wiki
http://www11.atwiki.jp/s-irie/pages/21.html
■ ppa
https://launchpad.net/~irie/+archive/elisp

iBusはデフォルトでは Ctrl-Space でオンオフを切り替えられるようになっている、
EmacsのMark setと重複しているため、それを無効にする。
そして Ctrl-\ でIBusが起動するようにする。ついでにカーソルの色も変更。

#+begin_src emacs-lisp
  (require 'ibus)
  ;; Turn on ibus-mode automatically after loading .emacs
  (add-hook 'after-init-hook 'ibus-mode-on)
  ;; Use C-SPC for Set Mark command
  (ibus-define-common-key ?\C-s nil)
  ;; Use C-/ for Undo command
  (ibus-define-common-key ?\C-\/ nil)
  ;; Change cursor color depending on IBus status
  (setq ibus-cursor-color '("red" "white" "blue"))
  ;; 変換候補表示中のカーソルの位置および形状を変える
  (setq ibus-cursor-type-for-candidate 0)
  (setq ibus-put-cursor-on-candidate nil)
  ;; C-\ で半角英数モードをトグルする
  (global-set-key "\C-\\" 'ibus-toggle)
  ;; 予測候補ウィンドウの表示位置の変更
  (setq ibus-prediction-window-position t)
#+end_src

*** setting tabbar.el
- タブ表示
  -タブ選択: マウスクリック，Ctrl-, Ctrl-.
  - 表示・非表示の変更: F4
- バッファ状態復元
   o 状態復元: Ctrl-x F
   o 状態保存: Ctrl-x S または Emacs 終了時
sites
http://d.hatena.ne.jp/alfad/20100425/1272208744
http://www.emacswiki.org/cgi-bin/wiki/TabBarMode
http://d.hatena.ne.jp/katsu_w/20080319/1205923300
http://sourceforge.net/projects/emhacks/files/


**** グループ化せずに*scratch*以外のタブを表示
#+begin_src emacs-lisp
  (when (require 'tabbar nil t)
    (setq tabbar-buffer-groups-function
          (lambda () (list "All Buffers")))
    (setq tabbar-buffer-list-function
          (lambda ()
            (remove-if
             (lambda(buffer)
               (find (aref (buffer-name buffer) 0) " *"))
             (buffer-list))))
    (tabbar-mode))
#+end_src

**** 左に表示されるボタンを無効化
#+begin_src emacs-lisp
  ;;(setq tabbar-home-button-enabled "")
  ;;(setq tabbar-scroll-left-button-enabled "")
  ;;(setq tabbar-scroll-right-button-enabled "")
  ;;(setq tabbar-scroll-left-button-disabled "")
  ;;(setq tabbar-scroll-right-button-disabled "")
#+end_src

**** 色設定
#+begin_src emacs-lisp
  (set-face-attribute
    'tabbar-default nil
    :background "grey90") ;バー自体の色
   (set-face-attribute ;非アクティブなタブ
    'tabbar-unselected nil
    :background "grey80"
    :foreground "grey40"
    :box nil)
   (set-face-attribute ;アクティブなタブ
    'tabbar-selected nil
    :background "grey50"
    :foreground "black"
    :box nil)
   (set-face-attribute
    'tabbar-button nil
    :box '(:line-width 1 :color "gray72" :style released-button))
#+end_src

**** 幅設定
#+begin_src emacs-lisp
  (set-face-attribute  'tabbar-separator nil
                       :height 0.7)
#+end_src

**** キーバインド F4 で tabbar-mode
#+begin_src emacs-lisp
(global-set-key (kbd "C-,") 'tabbar-backward)
(global-set-key (kbd "C-.") 'tabbar-forward)
(global-set-key (kbd "<f4>") 'tabbar-mode)
#+end_src

*** setting windows.el & revive.el
;; key bind  Edit
;; C-c C-w 1	分割状態 1 へ (Q)
;; C-c C-w 2	分割状態 2 へ (Q)
;; C-c C-w 9	分割状態 9 へ (Q)
;; C-c C-w 0	直前の分割状態へ(バッファ0と交換) (Q)
;; C-c C-w SPC	分割状態1～nのうち、直前用いたものへ (Q)
;; C-c C-w n	次の分割状態へ(C-c SPC)
;; C-c C-w p	前の分割状態へ
;; C-c C-w !	現在のウィンドウを破棄 (Q)
;; C-c C-w -	ちょっと前のウィンドウ状態を復活(Q)
;; C-c C-w C-w	ウィンドウ操作メニュー
;; C-c C-w C-r	リジュームメニュー
;; C-c C-w C-l	ローカルリジュームメニュー
;; C-c C-w C-s	タスク切替え
;; C-c C-w =	分割状態保存バッファ一覧表示 (Q)

;; デフォルトの設定ではQマークの付いているkey bindはC-wを省略できます。
http://technique.sonots.com/?UNIX%2F%E5%AD%A6%E7%94%9F%E3%83%84%E3%83%BC%E3%83%AB%2Felisp%2Fwindows.el
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
**** windows.el
(require 'windows)
(win:startup-with-window)
(define-key ctl-x-map "C" 'see-you-again)

**** revive.el
#+begin_src emacs-lisp
  (require 'revive)
  (autoload 'save-current-configuration "revive" "Save status" t)
  (autoload 'resume "revive" "Resume Emacs" t)
  (autoload 'wipe "revive" "Wipe emacs" t)
  (define-key ctl-x-map "F" 'resume)                        ; C-x F で復元
  (define-key ctl-x-map "K" 'wipe)                          ; C-x K で Kill
  (add-hook 'kill-emacs-hook 'save-current-configuration)   ; 終了時に状態保存
  (resume) ; 起動時に復元
#+end_src
